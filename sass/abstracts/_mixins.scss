@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

// Cool gradient color text
// 1. First set the background image to desired gradient
// 2. then set element type to inline-block - that way it will fit the text in and not occupy 100%
// 3. then use background-clip: text; to only use background colour BEHIND text
// 4. finally set text color to transparent so that the background colour is visible
@mixin gradient-text($from, $to) {
    background-image: linear-gradient(to right, $from, $to);
    display: inline-block;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
}

@mixin stacked-backgrounds($url) {
    background-image: linear-gradient(
            to right bottom,
            rgba($color-primary-light, 0.8),
            rgba($color-primary-dark, 0.8)
        ),
        url($url);
}

// Skew effect done differently
// just skew container then un-skew direct children
@mixin skewed-container($skew) {
    transform: skewY($skew);
    & > * {
        transform: skewY(-$skew);
    }
}

@mixin center-absolute() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// SEC: Media Query Manager
/*
0 - 600px:  Phone
600 - 900px:  Tablet portrait
900 - 1200px:  Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px +: Big Desktop
*/

@mixin respond-phone {
    @media (max-width: 600px) {
        @content;
    }
}

/*
    $breakpoint argument choices:
    - phone
    - tab-port
    - tab-land
    - big-desktop
*/
@mixin respond($breakpoint) {
    // rems in here aren't affected by root font-size
    // ems are way to go - 16px by default
    @if $breakpoint == phone {
        @media (max-width: 37.5em) {
            @content;
        }
    }

    @if $breakpoint == tab-port {
        @media (max-width: 56.25em) {
            @content;
        }
    }

    @if $breakpoint == tab-land {
        @media (max-width: 75em) {
            @content;
        }
    }

    @if $breakpoint == big-desktop {
        @media (min-width: 112.5em) {
            @content;
        }
    }
}
